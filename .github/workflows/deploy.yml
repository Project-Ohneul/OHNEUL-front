name: deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run SSH scripts
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Delete folders if they exist
            if [ -d /home/ec2-user/OHNEUL-front ]; then
              sudo rm -rf /home/ec2-user/OHNEUL-front
            fi

            # Create project directory
            sudo mkdir -p /home/ec2-user/OHNEUL-front
            sudo chown -R ec2-user:ec2-user /home/ec2-user/OHNEUL-front

            # Clone the repository
            cd /home/ec2-user
            git clone https://github.com/Project-Ohneul/OHNEUL-front.git
            
            # Change to project directory
            cd /home/ec2-user/OHNEUL-front

            # Set env
            echo "REACT_APP_BASE_URL=${{ secrets.REACT_APP_BASE_URL }}" > .env
            echo "REACT_APP_TOSS_PAYMENTS_CLIENT_KEY=${{ secrets.REACT_APP_TOSS_PAYMENTS_CLIENT_KEY }}" >> .env
            echo "REACT_APP_TOSS_PAYMENTS_SECRET_KEY=${{ secrets.REACT_APP_TOSS_PAYMENTS_SECRET_KEY }}" >> .env

            # Clean npm & install dependencies
            npm cache clean --force
            npm install

            # Build project
            npm run build

            # Restart server
            pm2 restart ohneul-client || pm2 start npm --name ohneul-client -- start:dev

            # Check PM2 list
            pm2 list
